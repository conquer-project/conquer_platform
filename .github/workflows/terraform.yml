name: terraform
on:
  workflow_call:
    inputs:
      validate:
        default: true
        description: "Wheter to validate or not"
        required: false
        type: boolean
      plan:
        default: true
        description: "Wheter to plan or not"
        required: false
        type: boolean
      apply:
        default: false
        description: "Wheter apply or not"
        required: false
        type: boolean
      destroy:
        default: false
        description: "Whether destroy or not"
        required: false
        type: boolean
      fmt-check:
        default: false
        description: "Wheter or not check for fomatting"
        required: false
        type: boolean
      workspace:
        required: true
        description: "Workspace to be selected. Make sure that the workspace exists before passing it"
        type: string
      working-dir:
        required: true
        description: "Working Directory"
        type: string
      role-to-assume:
        required: true
        description: "Role to assume"
        type: string
      pr:
        required: false
        default: false
        description: "Whether or not comment the pull request"
        type: boolean

jobs:
  terraform-workflow:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-dir }}
    env:
      WORKSPACE: ${{ inputs.workspace }}
      DESTROY: ${{ inputs.destroy }}
    steps:
      - uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          aws-region: us-east-1
      - uses: hashicorp/setup-terraform@v2
      - name: terraform-fmt
        id: fmt
        if: inputs.fmt-check
        run: terraform fmt -check
      - name: terraform-init
        id: init
        run: terraform init
      - name: terraform-validate
        id: validate
        if: inputs.validate
        run: terraform validate
      - name: terraform-ws-select
        id: workspace
        run: terraform workspace select -or-create $WORKSPACE
      - name: terraform-plan-no-color
        id: plan-no-color
        if: inputs.pr && inputs.plan
        run: 'terraform plan -no-color -out plan.out'
        continue-on-error: true
      - name: terraform-plan
        id: plan
        if: inputs.pr == false && inputs.plan
        run: '[[ "$DESTROY" == "true" ]] && terraform plan -destroy || terraform plan -out plan.out'
      - name: Update PR
        uses: actions/github-script@v6
        id: pr
        if: inputs.pr && inputs.plan
        env:
          PLAN: "${{ steps.plan-no-color.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan (${process.env.WORKSPACE}) ðŸ“–\`${{ steps.plan-no-color.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: terraform-apply
        id: apply
        if: inputs.apply
        run: '[[ "$DESTROY" == "true" ]] && terraform destroy --auto-approve || terraform apply --auto-approve' # TODO: Adjust apply to pull the plan.out from artifact